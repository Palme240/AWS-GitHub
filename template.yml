AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Function and API Gateway creating and deployment
Resources:
  Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      FunctionName: myfunction-GitHub
      Handler: dev.lambda_handler
      Runtime: python3.8
      Timeout: 300
      MemorySize: 256
      Policies:
        - AmazonS3FullAccess
        - AmazonTextractFullAccess
        - CloudWatchLogsFullAccess
        - AWSLambdaBasicExecutionRole
      Description: Invoke lambda function.


# Create and deploy API Gateway





SampleApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: ApiDeploy

  SampleApiMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "GET"
      Integration:
        IntegrationHttpMethod: "POST"
        type: "AWS_PROXY"
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda/path:2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt "SampleLambda.Arn"
        ResourcesId: !GetAtt "SampleApi.RootResourceId"
        RestApiId: !Ref "SampleApi"
   
  SampleApiDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn: "SampleApiMethod"
    Properties:
      RestApiId: !Ref "SampleApi"
      StageName: test

  LambdaApiGatewayInvoke:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "SampleLambda.Arn"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId }:${SampleApi}/*/GET/"
